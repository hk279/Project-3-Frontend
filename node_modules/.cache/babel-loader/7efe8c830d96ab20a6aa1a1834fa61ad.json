{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerej\\\\Desktop\\\\R0314-MEAN\\\\project-3-frontend\\\\src\\\\components\\\\add.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../App.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, FormInput, Form, FormGroup } from \"shards-react\";\nimport Alert from \"./alert\";\nimport LoadingSpinner from \"./loadingSpinner\";\n\nclass Add extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formControl: {\n        Name: {\n          value: \"\",\n          valid: false,\n          invalid: false\n        },\n        Platform: {\n          value: \"\",\n          valid: false,\n          invalid: false\n        },\n        Year: {\n          value: \"\",\n          valid: false,\n          invalid: false\n        },\n        Global_Sales: {\n          value: \"\",\n          valid: false,\n          invalid: false\n        }\n      },\n      fetchInProgress: false,\n      alertMessage: \"\"\n    };\n    this.changeHandler = this.changeHandler.bind(this);\n    this.isEntered = this.isEntered.bind(this);\n    this.isNumber = this.isNumber.bind(this);\n  }\n\n  changeHandler(event) {\n    var fieldName = event.target.id;\n    var newValue = event.target.value;\n    var newValidState;\n    var newInvalidState;\n\n    if (fieldName === \"Year\" || fieldName === \"Global_Sales\") {\n      newValidState = this.isNumber(newValue);\n\n      if (newValidState === true) {\n        newInvalidState = false;\n      } else {\n        newInvalidState = true;\n      }\n    } else {\n      newValidState = this.isEntered(newValue);\n\n      if (newValidState === true) {\n        newInvalidState = false;\n      } else {\n        newInvalidState = true;\n      }\n    }\n\n    this.setState({\n      formControl: { ...this.state.formControl,\n        [fieldName]: {\n          value: newValue,\n          valid: newValidState,\n          invalid: newInvalidState\n        }\n      }\n    });\n  } //Validator that checks if there is a value given to the input field.\n\n\n  isEntered(value) {\n    if (value.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  } //Validator for the year and global sales fields that checks if the given value is a number.\n\n\n  isNumber(value) {\n    var numberValue = Number(value);\n    var nan = isNaN(numberValue);\n\n    if (nan === false && value !== \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  addData() {\n    var name = this.state.formControl.Name.value;\n    var platform = this.state.formControl.Platform.value;\n    var year = this.state.formControl.Year.value;\n    var globalSales = this.state.formControl.Global_Sales.value; //Resets the state of the alert message.\n\n    this.setState({\n      alertMessage: \"\"\n    });\n\n    if (name === \"\" || platform === \"\" || year === \"\" || globalSales === \"\") {\n      this.setState({\n        alertMessage: \"Please fill all fields to submit data.\"\n      });\n      ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n        alertText: this.state.alertMessage,\n        status: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }), document.getElementsByClassName(\"alert\")[0]);\n    } else if (!this.isNumber(year) || !this.isNumber(globalSales)) {\n      this.setState({\n        alertMessage: \"Year and Global Sales fields need to have a numerical value.\"\n      });\n      ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n        alertText: this.state.alertMessage,\n        status: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }), document.getElementsByClassName(\"alert\")[0]);\n    } else {\n      var newEntry = {\n        Name: name,\n        Platform: platform,\n        Year: year,\n        Global_Sales: globalSales\n      }; //The state is set in order to render the loading spinner.\n\n      this.setState({\n        fetchInProgress: true\n      });\n      fetch(\"https://node-mongo-games.herokuapp.com/api/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newEntry)\n      }).catch(error => {\n        console.error(\"Error:\", error);\n        this.setState({\n          alertMessage: \"Fetch error\"\n        });\n        ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n          alertText: this.state.alertMessage,\n          status: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }\n        }), document.getElementsByClassName(\"alert\")[0]);\n      }).then(data => {\n        console.log(data);\n      }).then(() => {\n        this.setState({\n          alertMessage: \"Data saved successfully!\",\n          fetchInProgress: false\n        });\n        ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n          alertText: this.state.alertMessage,\n          status: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }\n        }), document.getElementsByClassName(\"alert\")[0]);\n      });\n    }\n  }\n\n  render() {\n    var spinner = \"\";\n\n    if (this.state.fetchInProgress === true) {\n      spinner = /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 23\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, \"Add a New Entry\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(FormInput, {\n      id: \"Name\",\n      type: \"text\",\n      onChange: e => {\n        this.changeHandler(e);\n      },\n      valid: this.state.formControl.Name.valid,\n      invalid: this.state.formControl.Name.invalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Platform\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, \"Platform\"), /*#__PURE__*/React.createElement(FormInput, {\n      id: \"Platform\",\n      type: \"text\",\n      onChange: e => {\n        this.changeHandler(e);\n      },\n      valid: this.state.formControl.Platform.valid,\n      invalid: this.state.formControl.Platform.invalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, \"Year\"), /*#__PURE__*/React.createElement(FormInput, {\n      id: \"Year\",\n      type: \"text\",\n      onChange: e => {\n        this.changeHandler(e);\n      },\n      valid: this.state.formControl.Year.valid,\n      invalid: this.state.formControl.Year.invalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Global_Sales\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, \"Global Sales\"), /*#__PURE__*/React.createElement(FormInput, {\n      id: \"Global_Sales\",\n      type: \"text\",\n      onChange: e => {\n        this.changeHandler(e);\n      },\n      valid: this.state.formControl.Global_Sales.valid,\n      invalid: this.state.formControl.Global_Sales.invalid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"add-button\",\n      onClick: () => {\n        this.addData();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, spinner), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, this.state.alertMessage), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      theme: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }\n    }, \"Back to Search\")));\n  }\n\n}\n\nexport default Add;","map":{"version":3,"sources":["C:/Users/jerej/Desktop/R0314-MEAN/project-3-frontend/src/components/add.js"],"names":["React","ReactDOM","Link","Button","FormInput","Form","FormGroup","Alert","LoadingSpinner","Add","Component","constructor","props","state","formControl","Name","value","valid","invalid","Platform","Year","Global_Sales","fetchInProgress","alertMessage","changeHandler","bind","isEntered","isNumber","event","fieldName","target","id","newValue","newValidState","newInvalidState","setState","length","numberValue","Number","nan","isNaN","addData","name","platform","year","globalSales","render","document","getElementsByClassName","newEntry","fetch","method","headers","body","JSON","stringify","catch","error","console","then","data","log","spinner","e"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, FormInput, Form, FormGroup } from \"shards-react\";\r\nimport Alert from \"./alert\";\r\nimport LoadingSpinner from \"./loadingSpinner\";\r\n\r\nclass Add extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formControl: {\r\n                Name: {\r\n                    value: \"\",\r\n                    valid: false,\r\n                    invalid: false,\r\n                },\r\n                Platform: {\r\n                    value: \"\",\r\n                    valid: false,\r\n                    invalid: false,\r\n                },\r\n                Year: {\r\n                    value: \"\",\r\n                    valid: false,\r\n                    invalid: false,\r\n                },\r\n                Global_Sales: {\r\n                    value: \"\",\r\n                    valid: false,\r\n                    invalid: false,\r\n                },\r\n            },\r\n            fetchInProgress: false,\r\n            alertMessage: \"\",\r\n        };\r\n        this.changeHandler = this.changeHandler.bind(this);\r\n        this.isEntered = this.isEntered.bind(this);\r\n        this.isNumber = this.isNumber.bind(this);\r\n    }\r\n\r\n    changeHandler(event) {\r\n        var fieldName = event.target.id;\r\n        var newValue = event.target.value;\r\n        var newValidState;\r\n        var newInvalidState;\r\n\r\n        if (fieldName === \"Year\" || fieldName === \"Global_Sales\") {\r\n            newValidState = this.isNumber(newValue);\r\n            if (newValidState === true) {\r\n                newInvalidState = false;\r\n            } else {\r\n                newInvalidState = true;\r\n            }\r\n        } else {\r\n            newValidState = this.isEntered(newValue);\r\n            if (newValidState === true) {\r\n                newInvalidState = false;\r\n            } else {\r\n                newInvalidState = true;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            formControl: {\r\n                ...this.state.formControl,\r\n                [fieldName]: {\r\n                    value: newValue,\r\n                    valid: newValidState,\r\n                    invalid: newInvalidState,\r\n                },\r\n            },\r\n        });\r\n    }\r\n\r\n    //Validator that checks if there is a value given to the input field.\r\n    isEntered(value) {\r\n        if (value.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //Validator for the year and global sales fields that checks if the given value is a number.\r\n    isNumber(value) {\r\n        var numberValue = Number(value);\r\n        var nan = isNaN(numberValue);\r\n        if (nan === false && value !== \"\") {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    addData() {\r\n        var name = this.state.formControl.Name.value;\r\n        var platform = this.state.formControl.Platform.value;\r\n        var year = this.state.formControl.Year.value;\r\n        var globalSales = this.state.formControl.Global_Sales.value;\r\n\r\n        //Resets the state of the alert message.\r\n        this.setState({ alertMessage: \"\" });\r\n\r\n        if (name === \"\" || platform === \"\" || year === \"\" || globalSales === \"\") {\r\n            this.setState({ alertMessage: \"Please fill all fields to submit data.\" });\r\n            ReactDOM.render(\r\n                <Alert alertText={this.state.alertMessage} status=\"error\"></Alert>,\r\n                document.getElementsByClassName(\"alert\")[0]\r\n            );\r\n        } else if (!this.isNumber(year) || !this.isNumber(globalSales)) {\r\n            this.setState({ alertMessage: \"Year and Global Sales fields need to have a numerical value.\" });\r\n            ReactDOM.render(\r\n                <Alert alertText={this.state.alertMessage} status=\"error\"></Alert>,\r\n                document.getElementsByClassName(\"alert\")[0]\r\n            );\r\n        } else {\r\n            var newEntry = {\r\n                Name: name,\r\n                Platform: platform,\r\n                Year: year,\r\n                Global_Sales: globalSales,\r\n            };\r\n\r\n            //The state is set in order to render the loading spinner.\r\n            this.setState({ fetchInProgress: true });\r\n\r\n            fetch(\"https://node-mongo-games.herokuapp.com/api/add\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(newEntry),\r\n            })\r\n                .catch((error) => {\r\n                    console.error(\"Error:\", error);\r\n                    this.setState({ alertMessage: \"Fetch error\" });\r\n                    ReactDOM.render(\r\n                        <Alert alertText={this.state.alertMessage} status=\"error\"></Alert>,\r\n                        document.getElementsByClassName(\"alert\")[0]\r\n                    );\r\n                })\r\n                .then((data) => {\r\n                    console.log(data);\r\n                })\r\n                .then(() => {\r\n                    this.setState({ alertMessage: \"Data saved successfully!\", fetchInProgress: false });\r\n                    ReactDOM.render(\r\n                        <Alert alertText={this.state.alertMessage} status=\"success\"></Alert>,\r\n                        document.getElementsByClassName(\"alert\")[0]\r\n                    );\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var spinner = \"\";\r\n        if (this.state.fetchInProgress === true) {\r\n            spinner = <LoadingSpinner></LoadingSpinner>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"add\">\r\n                <h3>Add a New Entry</h3>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"Name\">Name</label>\r\n                        <FormInput\r\n                            id=\"Name\"\r\n                            type=\"text\"\r\n                            onChange={(e) => {\r\n                                this.changeHandler(e);\r\n                            }}\r\n                            valid={this.state.formControl.Name.valid}\r\n                            invalid={this.state.formControl.Name.invalid}\r\n                        ></FormInput>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"Platform\">Platform</label>\r\n                        <FormInput\r\n                            id=\"Platform\"\r\n                            type=\"text\"\r\n                            onChange={(e) => {\r\n                                this.changeHandler(e);\r\n                            }}\r\n                            valid={this.state.formControl.Platform.valid}\r\n                            invalid={this.state.formControl.Platform.invalid}\r\n                        ></FormInput>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"Year\">Year</label>\r\n                        <FormInput\r\n                            id=\"Year\"\r\n                            type=\"text\"\r\n                            onChange={(e) => {\r\n                                this.changeHandler(e);\r\n                            }}\r\n                            valid={this.state.formControl.Year.valid}\r\n                            invalid={this.state.formControl.Year.invalid}\r\n                        ></FormInput>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <label htmlFor=\"Global_Sales\">Global Sales</label>\r\n                        <FormInput\r\n                            id=\"Global_Sales\"\r\n                            type=\"text\"\r\n                            onChange={(e) => {\r\n                                this.changeHandler(e);\r\n                            }}\r\n                            valid={this.state.formControl.Global_Sales.valid}\r\n                            invalid={this.state.formControl.Global_Sales.invalid}\r\n                        ></FormInput>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Button\r\n                    className=\"add-button\"\r\n                    onClick={() => {\r\n                        this.addData();\r\n                    }}\r\n                >\r\n                    Submit\r\n                </Button>\r\n                <div className=\"loading-spinner\">{spinner}</div>\r\n                <div className=\"alert\">{this.state.alertMessage}</div>\r\n                <Link to=\"/\">\r\n                    <Button theme=\"secondary\">Back to Search</Button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Add;\r\n"]},"metadata":{},"sourceType":"module"}
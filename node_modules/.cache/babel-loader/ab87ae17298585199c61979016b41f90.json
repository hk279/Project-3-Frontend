{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerej\\\\Desktop\\\\R0314-MEAN\\\\project-3-frontend\\\\src\\\\components\\\\edit.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../App.css\";\nimport { Button, FormInput } from \"shards-react\";\nimport Alert from \"./alert\";\n\nfunction Edit(props) {\n  function updateData() {\n    var name = document.getElementById(\"Name\").value;\n    var platform = document.getElementById(\"Platform\").value;\n    var year = document.getElementById(\"Year\").value;\n    var globalSales = document.getElementById(\"Global_Sales\").value;\n    var message;\n\n    if (name === \"\" || platform === \"\" || year === \"\" || globalSales === \"\") {\n      message = \"Please fill all fields to submit data.\";\n      ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n        alertText: message,\n        status: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }), document.getElementsByClassName(\"alert\")[0]);\n    } else {\n      message = \"Edit successful!\";\n      var updatedData = {\n        _id: props.entry._id,\n        Name: name,\n        Platform: platform,\n        Year: year,\n        Global_Sales: globalSales\n      };\n      console.log(\"Updated data:\\n\" + JSON.stringify(updatedData));\n      fetch(\"http://localhost:5000/api/update\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedData)\n      }).catch(error => {\n        message = \"Fetch error\";\n        console.error(\"Error:\", error);\n        ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n          alertText: message,\n          status: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }\n        }), document.getElementsByClassName(\"alert\")[0]);\n      }).then(response => response.json()).then(data => {\n        console.log(\"Updated data:\\n\" + JSON.stringify(data));\n        ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n          alertText: message,\n          status: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }), document.getElementsByClassName(\"alert\")[0]);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: \"50%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-field-label\",\n    htmlFor: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-field\",\n    id: \"Name\",\n    type: \"text\",\n    defaultValue: props.entry.Name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-field-label\",\n    htmlFor: \"Platform\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Platform\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-field\",\n    id: \"Platform\",\n    type: \"text\",\n    defaultValue: props.entry.Platform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-field-label\",\n    htmlFor: \"Year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Year\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-field\",\n    id: \"Year\",\n    type: \"text\",\n    defaultValue: props.entry.Year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-field-label\",\n    htmlFor: \"Global_Sales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Global Sales\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-field\",\n    id: \"Global_Sales\",\n    type: \"text\",\n    defaultValue: props.entry.Global_Sales,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"submit-button\",\n    onClick: () => {\n      updateData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Edit;","map":{"version":3,"sources":["C:/Users/jerej/Desktop/R0314-MEAN/project-3-frontend/src/components/edit.js"],"names":["React","ReactDOM","Button","FormInput","Alert","Edit","props","updateData","name","document","getElementById","value","platform","year","globalSales","message","render","getElementsByClassName","updatedData","_id","entry","Name","Platform","Year","Global_Sales","console","log","JSON","stringify","fetch","method","headers","body","catch","error","then","response","json","data","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,YAAP;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,cAAlC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,WAASC,UAAT,GAAsB;AAClB,QAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAA3C;AACA,QAAIC,QAAQ,GAAGH,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAAnD;AACA,QAAIE,IAAI,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAA3C;AACA,QAAIG,WAAW,GAAGL,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAA1D;AAEA,QAAII,OAAJ;;AAEA,QAAIP,IAAI,KAAK,EAAT,IAAeI,QAAQ,KAAK,EAA5B,IAAkCC,IAAI,KAAK,EAA3C,IAAiDC,WAAW,KAAK,EAArE,EAAyE;AACrEC,MAAAA,OAAO,GAAG,wCAAV;AACAd,MAAAA,QAAQ,CAACe,MAAT,eACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAED,OAAlB;AAA2B,QAAA,MAAM,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIN,QAAQ,CAACQ,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,CAFJ;AAIH,KAND,MAMO;AACHF,MAAAA,OAAO,GAAG,kBAAV;AAEA,UAAIG,WAAW,GAAG;AACdC,QAAAA,GAAG,EAAEb,KAAK,CAACc,KAAN,CAAYD,GADH;AAEdE,QAAAA,IAAI,EAAEb,IAFQ;AAGdc,QAAAA,QAAQ,EAAEV,QAHI;AAIdW,QAAAA,IAAI,EAAEV,IAJQ;AAKdW,QAAAA,YAAY,EAAEV;AALA,OAAlB;AAOAW,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeV,WAAf,CAAhC;AAEAW,MAAAA,KAAK,CAAC,kCAAD,EAAqC;AACtCC,QAAAA,MAAM,EAAE,KAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF6B;AAKtCC,QAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAeV,WAAf;AALgC,OAArC,CAAL,CAOKe,KAPL,CAOYC,KAAD,IAAW;AACdnB,QAAAA,OAAO,GAAG,aAAV;AACAU,QAAAA,OAAO,CAACS,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAjC,QAAAA,QAAQ,CAACe,MAAT,eACI,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAED,OAAlB;AAA2B,UAAA,MAAM,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEIN,QAAQ,CAACQ,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,CAFJ;AAIH,OAdL,EAeKkB,IAfL,CAeWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAfxB,EAgBKF,IAhBL,CAgBWG,IAAD,IAAU;AACZb,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeU,IAAf,CAAhC;AACArC,QAAAA,QAAQ,CAACe,MAAT,eACI,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAED,OAAlB;AAA2B,UAAA,MAAM,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEIN,QAAQ,CAACQ,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,CAFJ;AAIH,OAtBL;AAuBH;AACJ;;AACD,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEsB,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,YAAY,EAAEjC,KAAK,CAACc,KAAN,CAAYC,IAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAUI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAaI;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,EAAE,EAAC,UAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,YAAY,EAAEf,KAAK,CAACc,KAAN,CAAYE,QAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAmBI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAsBI;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,YAAY,EAAEhB,KAAK,CAACc,KAAN,CAAYG,IAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,eA4BI;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAoC,IAAA,OAAO,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BJ,eA+BI;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,EAAE,EAAC,cAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,YAAY,EAAEjB,KAAK,CAACc,KAAN,CAAYI,YAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CADJ,eAuCI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,eADd;AAEI,IAAA,OAAO,EAAE,MAAM;AACXjB,MAAAA,UAAU;AACb,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCJ,eA+CI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/CJ,CADJ;AAmDH;;AAED,eAAeF,IAAf","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../App.css\";\r\nimport { Button, FormInput } from \"shards-react\";\r\nimport Alert from \"./alert\";\r\n\r\nfunction Edit(props) {\r\n    function updateData() {\r\n        var name = document.getElementById(\"Name\").value;\r\n        var platform = document.getElementById(\"Platform\").value;\r\n        var year = document.getElementById(\"Year\").value;\r\n        var globalSales = document.getElementById(\"Global_Sales\").value;\r\n\r\n        var message;\r\n\r\n        if (name === \"\" || platform === \"\" || year === \"\" || globalSales === \"\") {\r\n            message = \"Please fill all fields to submit data.\";\r\n            ReactDOM.render(\r\n                <Alert alertText={message} status=\"error\"></Alert>,\r\n                document.getElementsByClassName(\"alert\")[0]\r\n            );\r\n        } else {\r\n            message = \"Edit successful!\";\r\n\r\n            var updatedData = {\r\n                _id: props.entry._id,\r\n                Name: name,\r\n                Platform: platform,\r\n                Year: year,\r\n                Global_Sales: globalSales,\r\n            };\r\n            console.log(\"Updated data:\\n\" + JSON.stringify(updatedData));\r\n\r\n            fetch(\"http://localhost:5000/api/update\", {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(updatedData),\r\n            })\r\n                .catch((error) => {\r\n                    message = \"Fetch error\";\r\n                    console.error(\"Error:\", error);\r\n                    ReactDOM.render(\r\n                        <Alert alertText={message} status=\"error\"></Alert>,\r\n                        document.getElementsByClassName(\"alert\")[0]\r\n                    );\r\n                })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log(\"Updated data:\\n\" + JSON.stringify(data));\r\n                    ReactDOM.render(\r\n                        <Alert alertText={message} status=\"success\"></Alert>,\r\n                        document.getElementsByClassName(\"alert\")[0]\r\n                    );\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <div style={{ maxWidth: \"50%\" }}>\r\n            <form>\r\n                <label className=\"form-field-label\" htmlFor=\"Name\">\r\n                    Name\r\n                </label>\r\n                <input\r\n                    className=\"form-field\"\r\n                    id=\"Name\"\r\n                    type=\"text\"\r\n                    defaultValue={props.entry.Name}\r\n                />\r\n                <label className=\"form-field-label\" htmlFor=\"Platform\">\r\n                    Platform\r\n                </label>\r\n                <input\r\n                    className=\"form-field\"\r\n                    id=\"Platform\"\r\n                    type=\"text\"\r\n                    defaultValue={props.entry.Platform}\r\n                />\r\n                <label className=\"form-field-label\" htmlFor=\"Year\">\r\n                    Year\r\n                </label>\r\n                <input\r\n                    className=\"form-field\"\r\n                    id=\"Year\"\r\n                    type=\"text\"\r\n                    defaultValue={props.entry.Year}\r\n                />\r\n                <label className=\"form-field-label\" htmlFor=\"Global_Sales\">\r\n                    Global Sales\r\n                </label>\r\n                <input\r\n                    className=\"form-field\"\r\n                    id=\"Global_Sales\"\r\n                    type=\"text\"\r\n                    defaultValue={props.entry.Global_Sales}\r\n                />\r\n            </form>\r\n            <Button\r\n                className=\"submit-button\"\r\n                onClick={() => {\r\n                    updateData();\r\n                }}\r\n            >\r\n                Submit\r\n            </Button>\r\n            <div className=\"alert\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jerej\\\\Desktop\\\\R0314-MEAN\\\\project-3-frontend\\\\src\\\\components\\\\edit.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useParams } from \"react-router-dom\";\nimport \"../App.css\";\nimport { Button, FormInput, Form, FormGroup } from \"shards-react\";\nimport Alert from \"./alert\";\n\nfunction Edit(props) {\n  //ID of the entry that is being edited comes from the URL parameter.\n  var id = props.match.params.id;\n  var initialData = getData(id);\n\n  function getData(entryId) {\n    var url = \"http://localhost:5000/api/get/\" + entryId;\n    var data = fetch(url).then(response => {\n      return JSON.stringify(response.json());\n    });\n    console.log(\"getData returns\\n\" + data);\n    return data;\n  }\n\n  function updateData() {\n    var name = document.getElementById(\"Name\").value;\n    var platform = document.getElementById(\"Platform\").value;\n    var year = document.getElementById(\"Year\").value;\n    var globalSales = document.getElementById(\"Global_Sales\").value;\n    var message;\n\n    if (name === \"\" || platform === \"\" || year === \"\" || globalSales === \"\") {\n      message = \"Please fill all fields to submit data.\";\n      ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n        alertText: message,\n        status: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }), document.getElementsByClassName(\"alert\")[0]);\n    } else {\n      message = \"Edit successful!\";\n      var updatedData = {\n        _id: props.entry._id,\n        Name: name,\n        Platform: platform,\n        Year: year,\n        Global_Sales: globalSales\n      };\n      console.log(\"Updated data:\\n\" + JSON.stringify(updatedData));\n      fetch(\"http://localhost:5000/api/update\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedData)\n      }).catch(error => {\n        message = \"Fetch error\";\n        console.error(\"Error:\", error);\n        ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n          alertText: message,\n          status: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }\n        }), document.getElementsByClassName(\"alert\")[0]);\n      }).then(response => response.json()).then(data => {\n        console.log(\"Updated data:\\n\" + JSON.stringify(data));\n        ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n          alertText: message,\n          status: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }\n        }), document.getElementsByClassName(\"alert\")[0]);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Name\",\n    type: \"text\",\n    defaultValue: initialData.Name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Platform\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Platform\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Platform\",\n    type: \"text\",\n    defaultValue: initialData.Platform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Year\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Year\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Year\",\n    type: \"text\",\n    defaultValue: initialData.Year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Global_Sales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Global Sales\"), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Global_Sales\",\n    type: \"text\",\n    defaultValue: initialData.Global_Sales,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: \"submit-button\",\n    onClick: () => {\n      updateData();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Edit;","map":{"version":3,"sources":["C:/Users/jerej/Desktop/R0314-MEAN/project-3-frontend/src/components/edit.js"],"names":["React","ReactDOM","useParams","Button","FormInput","Form","FormGroup","Alert","Edit","props","id","match","params","initialData","getData","entryId","url","data","fetch","then","response","JSON","stringify","json","console","log","updateData","name","document","getElementById","value","platform","year","globalSales","message","render","getElementsByClassName","updatedData","_id","entry","Name","Platform","Year","Global_Sales","method","headers","body","catch","error"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"../App.css\";\r\nimport { Button, FormInput, Form, FormGroup } from \"shards-react\";\r\nimport Alert from \"./alert\";\r\n\r\nfunction Edit(props) {\r\n    //ID of the entry that is being edited comes from the URL parameter.\r\n    var id = props.match.params.id;\r\n    var initialData = getData(id);\r\n\r\n    function getData(entryId) {\r\n        var url = \"http://localhost:5000/api/get/\" + entryId;\r\n        var data = fetch(url).then((response) => {\r\n            return JSON.stringify(response.json());\r\n        });\r\n        console.log(\"getData returns\\n\" + data);\r\n        return data;\r\n    }\r\n\r\n    function updateData() {\r\n        var name = document.getElementById(\"Name\").value;\r\n        var platform = document.getElementById(\"Platform\").value;\r\n        var year = document.getElementById(\"Year\").value;\r\n        var globalSales = document.getElementById(\"Global_Sales\").value;\r\n\r\n        var message;\r\n\r\n        if (name === \"\" || platform === \"\" || year === \"\" || globalSales === \"\") {\r\n            message = \"Please fill all fields to submit data.\";\r\n            ReactDOM.render(\r\n                <Alert alertText={message} status=\"error\"></Alert>,\r\n                document.getElementsByClassName(\"alert\")[0]\r\n            );\r\n        } else {\r\n            message = \"Edit successful!\";\r\n\r\n            var updatedData = {\r\n                _id: props.entry._id,\r\n                Name: name,\r\n                Platform: platform,\r\n                Year: year,\r\n                Global_Sales: globalSales,\r\n            };\r\n            console.log(\"Updated data:\\n\" + JSON.stringify(updatedData));\r\n\r\n            fetch(\"http://localhost:5000/api/update\", {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(updatedData),\r\n            })\r\n                .catch((error) => {\r\n                    message = \"Fetch error\";\r\n                    console.error(\"Error:\", error);\r\n                    ReactDOM.render(\r\n                        <Alert alertText={message} status=\"error\"></Alert>,\r\n                        document.getElementsByClassName(\"alert\")[0]\r\n                    );\r\n                })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log(\"Updated data:\\n\" + JSON.stringify(data));\r\n                    ReactDOM.render(\r\n                        <Alert alertText={message} status=\"success\"></Alert>,\r\n                        document.getElementsByClassName(\"alert\")[0]\r\n                    );\r\n                });\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"edit\">\r\n            <Form>\r\n                <FormGroup>\r\n                    <label htmlFor=\"Name\">Name</label>\r\n                    <FormInput id=\"Name\" type=\"text\" defaultValue={initialData.Name}></FormInput>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <label htmlFor=\"Platform\">Platform</label>\r\n                    <FormInput id=\"Platform\" type=\"text\" defaultValue={initialData.Platform}></FormInput>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <label htmlFor=\"Year\">Year</label>\r\n                    <FormInput id=\"Year\" type=\"text\" defaultValue={initialData.Year}></FormInput>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <label htmlFor=\"Global_Sales\">Global Sales</label>\r\n                    <FormInput id=\"Global_Sales\" type=\"text\" defaultValue={initialData.Global_Sales}></FormInput>\r\n                </FormGroup>\r\n            </Form>\r\n            <Button\r\n                className=\"submit-button\"\r\n                onClick={() => {\r\n                    updateData();\r\n                }}\r\n            >\r\n                Submit\r\n            </Button>\r\n            <div className=\"alert\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Edit;\r\n"]},"metadata":{},"sourceType":"module"}